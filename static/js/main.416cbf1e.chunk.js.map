{"version":3,"sources":["api/calendar.js","components/Event.jsx","components/CreateEvent.jsx","components/DayContainer.jsx","components/Calendar.jsx","components/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","addEvent","props","a","console","log","requestOptions","method","headers","body","JSON","stringify","fetch","response","json","data","getEvents","deleteEvent","id","addAttendee","_id","attendee","changeAttendeeResponse","modifyEvent","newDescription","newSummary","newStartDate","newEndDate","Wrapper","styled","div","Container","Divisor","hr","EventTitle","Creator","Duration","Description","User","Attendees","P","p","Attendance","Event","user","name","email","event","summary","created","updated","start","end","description","color","creator","attendees","useState","isModifying","setIsModifying","setNewSummary","setNewDescription","slice","setNewStartDate","setNewEndDate","saveChanges","updateAttendance","res","displayName","organizer","self","responseStatus","background","Form","Group","as","Col","controlId","Label","Control","required","placeholder","value","onChange","e","target","Button","variant","onClick","type","min","map","key","CreateEvent","year","month","day","setSummary","setColor","setDescription","Date","setEndDate","sendForm","preventDefault","onSubmit","Row","Day","DayWrapper","EventsContainer","Evento","monthNames","splitDate","date","splitedDate","split","splitedDay","parseInt","DayContainer","TODAY","show","setShow","allEvents","handleClose","today","startDate","endDate","Modal","onHide","size","dialogClassName","className","Header","closeButton","Title","Body","Carousel","Item","Footer","ChangeMonth","img","previous","DayName","monthName","getFullYear","getMonth","getDate","changeMonth","daysInMonth","firstDayOfMonth","firstDay","moment","startOf","format","Number","getFirstDayOfMonth","CantDaysInMonth","i","push","Calendar","setDaysInMonth","setAllEvents","showFetchError","setShowFetchError","getData","useEffect","weekdayshort","weekdaysShort","Alert","onClose","dismissible","Heading","src","Login","localStorage","setItem","setUser","App","parse","getItem","Boolean","window","location","hostname","match","unregister","navigator","serviceWorker","ready","then","registration","catch","error","message","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.416cbf1e.chunk.js","sourcesContent":["const BASE_URL = 'https://evening-springs-90377.herokuapp.com';\n\nexport async function addEvent(props) {\n    // POST request using fetch with async/await\n    console.log(props);\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ ...props }),\n    };\n    const response = await fetch(`${BASE_URL}/addEvent`, requestOptions);\n    const data = await response.json();\n    return data;\n}\n\nexport async function getEvents() {\n    const response = await fetch(`${BASE_URL}/getEvents`);\n    const data = await response.json();\n    return data;\n}\n\nexport async function deleteEvent(id) {\n    const requestOptions = {\n        method: 'DELETE',\n    };\n    const response = await fetch(\n        `${BASE_URL}/deleteEvent/${id}`,\n        requestOptions\n    );\n    const data = await response.json();\n    return data;\n}\n\nexport async function addAttendee(props) {\n    const { _id, attendee } = props;\n    console.log(attendee);\n    const requestOptions = {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(attendee),\n    };\n    const response = await fetch(\n        `${BASE_URL}/addAttendee/${_id}`,\n        requestOptions\n    );\n    const data = await response.json();\n    return data;\n}\n\nexport async function changeAttendeeResponse(props) {\n    const { _id, attendee } = props;\n    const requestOptions = {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(attendee),\n    };\n    const response = await fetch(\n        `${BASE_URL}/updateResponseStatus/${_id}`,\n        requestOptions\n    );\n    const data = await response.json();\n    return data;\n}\n\nexport async function modifyEvent(props) {\n    const { _id, newDescription, newSummary, newStartDate, newEndDate } = props;\n\n    const requestOptions = {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            newDescription,\n            newSummary,\n            newStartDate,\n            newEndDate,\n        }),\n    };\n    const response = await fetch(\n        `${BASE_URL}/modifyEvent/${_id}`,\n        requestOptions\n    );\n    const data = await response.json();\n    return data;\n}\n","import React, { useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styled from '@emotion/styled';\nimport {\n    addAttendee,\n    changeAttendeeResponse,\n    deleteEvent,\n    modifyEvent,\n} from '../api/calendar';\n\nconst Wrapper = styled.div`\n    color: white;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    margin-bottom: 20px;\n`;\n\nconst Container = styled.div`\n    color: white;\n    max-width: 400px;\n    background: #23232b;\n    padding: 20px;\n    border-radius = 10px;\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n`;\n\nconst Divisor = styled.hr`\n    width: 100%;\n    border-top: 2px solid #ffffff;\n    margin-top: 8px;\n    margin-bottom: 8px;\n`;\n\nconst EventTitle = styled.div``;\nconst Creator = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`;\nconst Duration = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n`;\n\nconst Description = styled.div`\n    width: 70%;\n`;\n\nconst User = styled.div`\n    background: #6c757d;\n    padding: 5px;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Attendees = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n`;\n\nconst P = styled.p`\n    margin-bottom: 2px;\n`;\n\nconst Attendance = styled.div``;\n\nconst Event = (props) => {\n    const { name, email } = props.user;\n    const {\n        summary,\n        created,\n        updated,\n        start,\n        end,\n        description,\n        color,\n        _id,\n    } = props.event;\n    const { creator, attendees } = props.event;\n\n    const [isModifying, setIsModifying] = useState(false);\n    const [newSummary, setNewSummary] = useState(summary);\n    const [newDescription, setNewDescription] = useState(description);\n    const [newStartDate, setNewStartDate] = useState(`${start.slice(0, 10)}`);\n    const [newEndDate, setNewEndDate] = useState(`${end.slice(0, 10)}`);\n\n    const saveChanges = async () => {\n        await modifyEvent({\n            _id,\n            newSummary,\n            newDescription,\n            newStartDate,\n            newEndDate,\n        });\n        props.getEvents();\n    };\n\n    const updateAttendance = async (res, _id) => {\n        const attendee = {\n            id: 1,\n            email: email,\n            displayName: name,\n            organizer: false,\n            self: true,\n            responseStatus: res,\n        };\n        const updated = await changeAttendeeResponse({\n            _id,\n            attendee,\n        });\n        if (!updated) {\n            await addAttendee({ _id, attendee });\n        }\n        props.getEvents();\n    };\n\n    return (\n        <Wrapper>\n            <Container background={false && color}>\n                <EventTitle>\n                    {isModifying === true ? (\n                        <Form.Group as={Col} controlId=\"newSumarry\">\n                            <Form.Label>Summary</Form.Label>\n                            <Form.Control\n                                required\n                                placeholder=\"Summary\"\n                                value={newSummary}\n                                onChange={(e) => setNewSummary(e.target.value)}\n                            />\n                        </Form.Group>\n                    ) : (\n                        <h2>{summary}</h2>\n                    )}\n\n                    {email === creator.email && (\n                        <Button\n                            variant=\"danger\"\n                            onClick={async () => {\n                                await deleteEvent(_id);\n                                props.getEvents();\n                            }}\n                        >\n                            DELETE\n                        </Button>\n                    )}\n                    {email === creator.email && (\n                        <Button\n                            variant=\"secondary\"\n                            onClick={() => {\n                                setIsModifying(true);\n                            }}\n                        >\n                            MODIFY\n                        </Button>\n                    )}\n                    {isModifying === true && (\n                        <Button\n                            variant=\"success\"\n                            onClick={() => {\n                                setIsModifying(false);\n                                saveChanges();\n                            }}\n                        >\n                            SAVE\n                        </Button>\n                    )}\n                </EventTitle>\n                <Divisor />\n                <Creator>\n                    <h3>Creator</h3>\n                    <User>\n                        <P>{creator.displayName}</P>\n                        <P>{creator.email}</P>\n                    </User>\n                </Creator>\n\n                <Divisor />\n                <Duration>\n                    {isModifying === true ? (\n                        <div>\n                            <label>New Start Date</label>\n                            <br></br>\n                            <input\n                                type=\"date\"\n                                onChange={(e) =>\n                                    setNewStartDate(e.target.value)\n                                }\n                                value={newStartDate}\n                            />\n                        </div>\n                    ) : (\n                        <P>Start: {start.slice(0, 10)}</P>\n                    )}\n                    {isModifying === true ? (\n                        <div>\n                            <label>New End Date</label>\n                            <br></br>\n                            <input\n                                type=\"date\"\n                                min={newStartDate}\n                                onChange={(e) => setNewEndDate(e.target.value)}\n                                value={newEndDate}\n                            />\n                        </div>\n                    ) : (\n                        <P>End: {end.slice(0, 10)}</P>\n                    )}\n                    <P>created: {created.slice(0, 10)}</P>\n                    <P>Updated: {updated.slice(0, 10)}</P>\n                </Duration>\n                <Divisor />\n                <Description>\n                    <h3>Description</h3>\n\n                    {isModifying === true ? (\n                        <Form.Group as={Col} controlId=\"newDescription\">\n                            <Form.Control\n                                required\n                                placeholder=\"Description\"\n                                value={newDescription}\n                                onChange={(e) =>\n                                    setNewDescription(e.target.value)\n                                }\n                            />\n                        </Form.Group>\n                    ) : (\n                        <P>{description}</P>\n                    )}\n                </Description>\n                <Divisor />\n                <h3>Attendees</h3>\n                <Attendees>\n                    {attendees.map((attendee) => {\n                        return (\n                            <User key={attendee.displayName}>\n                                <P>{attendee.displayName}</P>\n                                <P>{attendee.email}</P>\n                                <P>\n                                    Response:{' '}\n                                    {attendee.responseStatus\n                                        ? 'Positive'\n                                        : attendee.responseStatus === null\n                                        ? 'N/a'\n                                        : 'Negative'}\n                                </P>\n                            </User>\n                        );\n                    })}\n                </Attendees>\n                <Divisor />\n                <Attendance>\n                    <h3>Attendance</h3>\n                    <Button\n                        variant=\"success\"\n                        onClick={() => {\n                            updateAttendance(true, _id);\n                        }}\n                    >\n                        Yes\n                    </Button>{' '}\n                    <Button\n                        variant=\"secondary\"\n                        onClick={() => {\n                            updateAttendance(null, _id);\n                        }}\n                    >\n                        N/a\n                    </Button>{' '}\n                    <Button\n                        variant=\"danger\"\n                        onClick={() => {\n                            updateAttendance(false, _id);\n                        }}\n                    >\n                        No\n                    </Button>{' '}\n                </Attendance>\n            </Container>\n        </Wrapper>\n    );\n};\nexport default Event;\n","import React, { useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styled from '@emotion/styled';\nimport { addEvent } from '../api/calendar';\n\nconst Wrapper = styled.div`\n    color: white;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    margin-bottom: 20px;\n`;\n\nconst Container = styled.div`\n    color: white;\n    max-width: 400px;\n    background: #23232b;\n    padding: 20px;\n    border-radius = 10px;\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n`;\n\nconst CreateEvent = (props) => {\n    let { year, month, day } = props;\n    month = month < 10 ? '0' + month : month;\n    day = day < 10 ? '0' + day : day;\n    const [summary, setSummary] = useState('');\n    const [color, setColor] = useState('');\n    const [description, setDescription] = useState('');\n    const [end, setEndDate] = useState(new Date());\n    const start = new Date(`${year}-${month}-${day}`);\n    const { name, email } = props.user;\n    console.log(props);\n\n    const creator = {\n        id: 10,\n        email: email,\n        displayName: name,\n        self: true,\n    };\n\n    const sendForm = async (e) => {\n        e.preventDefault();\n        await addEvent({\n            summary,\n            creator,\n            color,\n            description,\n            end: end,\n            start: start,\n        });\n        props.getEvents();\n    };\n\n    return (\n        <Wrapper>\n            <Container>\n                <h1>Create New Event</h1>\n                <Form onSubmit={sendForm}>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\n                            <Form.Label>Summary</Form.Label>\n                            <Form.Control\n                                required\n                                placeholder=\"Evento 2\"\n                                onChange={(e) => setSummary(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridPassword\">\n                            <Form.Label>Color</Form.Label>\n                            <Form.Control\n                                placeholder=\"#FF00FF\"\n                                onChange={(e) => setColor(e.target.value)}\n                            />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Group controlId=\"formGridAddress1\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control\n                            required\n                            placeholder=\"Viernes de la jungla\"\n                            onChange={(e) => setDescription(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formGridAddress2\">\n                        <Form.Label>End Date</Form.Label>\n                        <br></br>\n                        <input\n                            type=\"date\"\n                            min={`${year}-${month}-${day}`}\n                            onChange={(e) => setEndDate(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </Container>\n        </Wrapper>\n    );\n};\nexport default CreateEvent;\n","import React, { useState } from 'react';\nimport { Modal, Button, Carousel } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styled from '@emotion/styled';\nimport Event from './Event';\nimport CreateEvent from './CreateEvent';\n\nconst Day = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-sizing: border-box;\n    border: 1px solid transparent;\n    &:hover {\n        border: 1px solid white;\n        cursor: pointer;\n        backdrop-filter: brightness(1.6);\n    }\n`;\n\nconst DayWrapper = styled.div`\n    width: 100%;\n    height: 70%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst EventsContainer = styled.div`\n    width: 100%;\n    height: 30%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst Evento = styled.div`\n    width: 15%;\n    height: 50%;\n    background: ${(props) => props.color || 'red'};\n`;\n\nconst monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\n\nfunction splitDate(date) {\n    let splitedDate = date.split('-');\n    const splitedDay = splitedDate[2].slice(0, 2);\n    splitedDate[2] = splitedDay;\n    date = splitedDate.map((e) => parseInt(e));\n    return date;\n}\n\nconst DayContainer = (props) => {\n    const { year, month, day, TODAY } = props;\n    const [show, setShow] = useState(false);\n    const allEvents = props.allEvents;\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n            <Day\n                today={`${year}-${month}-${day}` === TODAY}\n                onClick={handleShow}\n            >\n                <DayWrapper>\n                    <span>{day || ''}</span>\n                </DayWrapper>\n                {day && (\n                    <EventsContainer>\n                        {allEvents.map((event) => {\n                            let startDate = splitDate(event.start);\n                            let endDate = splitDate(event.end);\n                            if (\n                                year >= startDate[0] &&\n                                year <= endDate[0] &&\n                                month >= startDate[1] &&\n                                month <= endDate[1] &&\n                                day + month * 40 >=\n                                    startDate[2] + startDate[1] * 40 &&\n                                day + month * 40 <= endDate[2] + endDate[1] * 40\n                            ) {\n                                return (\n                                    <Evento\n                                        key={event._id}\n                                        color={event.color}\n                                    />\n                                );\n                            }\n                            return '';\n                        })}\n                    </EventsContainer>\n                )}\n            </Day>\n            {day && (\n                <Modal\n                    show={show}\n                    onHide={handleClose}\n                    size=\"lg\"\n                    dialogClassName=\" public-profile-modal-class\"\n                    className=\"special_modal\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>\n                            {day}-{monthNames[month - 1]}\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Carousel>\n                            {allEvents.map((event) => {\n                                let startDate = splitDate(event.start);\n                                let endDate = splitDate(event.end);\n                                if (\n                                    year >= startDate[0] &&\n                                    year <= endDate[0] &&\n                                    month >= startDate[1] &&\n                                    month <= endDate[1] &&\n                                    day + month * 40 >=\n                                        startDate[2] + startDate[1] * 40 &&\n                                    day + month * 40 <=\n                                        endDate[2] + endDate[1] * 40\n                                ) {\n                                    return (\n                                        <Carousel.Item key={event._id}>\n                                            <Event\n                                                user={props.user}\n                                                event={event}\n                                                getEvents={props.getEvents}\n                                            />\n                                        </Carousel.Item>\n                                    );\n                                }\n                                return '';\n                            })}\n                            <Carousel.Item>\n                                <CreateEvent\n                                    year={year}\n                                    month={month}\n                                    day={day}\n                                    getEvents={props.getEvents}\n                                    user={props.user}\n                                />\n                            </Carousel.Item>\n                        </Carousel>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Cancel\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            )}\n        </>\n    );\n};\nexport default DayContainer;\n","import React, { useState, useEffect } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styled from '@emotion/styled';\nimport moment from 'moment';\nimport DayContainer from './DayContainer';\nimport { getEvents } from '../api/calendar';\n\nconst Container = styled.div`\n    width: 80%;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nconst Header = styled.div`\n    width: 100%;\n    margin-bottom: 2vh;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n`;\n\nconst ChangeMonth = styled.img`\n    width: 8%;\n    cursor: pointer;\n    transition-property: -moz-filter, -ms-filter, -o-filter, -webkit-filter,\n        filter;\n    transition-duration: 0.4s;\n    ${(props) => (props.previous ? 'transform:rotate(180deg)' : '')};\n    &:hover {\n        filter: brightness(1.7);\n    }\n`;\n\nconst Wrapper = styled.div`\n    height: 80%;\n    width: 80%;\n    background: #222331;\n    color: white;\n    display: grid;\n    grid-template-columns: auto auto auto auto auto auto auto;\n    grid-template-rows: auto auto auto auto auto auto;\n`;\n\nconst DayName = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-sizing: border-box;\n    border: 1px solid transparent;\n    background: ${(props) => (props.today === true ? '#296d98' : '')};\n    &:hover {\n        border: 1px solid white;\n        cursor: pointer;\n    }\n`;\n\nconst date = new Date();\nconst monthName = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\nlet year = date.getFullYear();\nlet month = date.getMonth() + 1;\nconst TODAY = `${year}-${month}-${date.getDate()}`;\n\nexport function changeMonth(year, month) {\n    let daysInMonth = [];\n    function getFirstDayOfMonth() {\n        let firstDay = moment(`${year}-${month}`, 'YYYY-MM')\n            .startOf('month')\n            .format('d');\n        return Number(firstDay);\n    }\n\n    function getCantDaysInMonth() {\n        return Number(moment(`${year}-${month}`, 'YYYY-MM').daysInMonth());\n    }\n\n    let firstDayOfMonth = getFirstDayOfMonth(year, month);\n    let CantDaysInMonth = getCantDaysInMonth(year, month);\n\n    for (let i = 0; i < 35; i++) {\n        if (i < firstDayOfMonth || i - firstDayOfMonth + 1 > CantDaysInMonth) {\n            daysInMonth.push('');\n            continue;\n        }\n        daysInMonth.push(i - firstDayOfMonth + 1);\n    }\n    return daysInMonth;\n}\n\nconst Calendar = (props) => {\n    const [daysInMonth, setDaysInMonth] = useState(changeMonth());\n    const [allEvents, setAllEvents] = useState([]);\n    const [showFetchError, setShowFetchError] = useState(false);\n\n    async function getData() {\n        try {\n            const data = await getEvents();\n            setAllEvents(data);\n            setShowFetchError(false);\n            console.log('GETTING DATA FROM CALENDAR');\n        } catch (err) {\n            console.log(err);\n            setShowFetchError(true);\n        }\n    }\n\n    useEffect(() => {\n        setDaysInMonth(changeMonth(year, month));\n        getData();\n    }, []);\n\n    let weekdayshort = moment.weekdaysShort();\n    return (\n        <Container>\n            {showFetchError && (\n                <Alert\n                    variant=\"danger\"\n                    onClose={() => setShowFetchError(false)}\n                    dismissible\n                >\n                    <Alert.Heading>API ERROR</Alert.Heading>\n                    <p>Failed to connect to api</p>\n                </Alert>\n            )}\n            <Header>\n                <ChangeMonth\n                    onClick={() => {\n                        month -= 1;\n                        if (month <= 0) {\n                            year--;\n                            month = 12;\n                        }\n                        setDaysInMonth(changeMonth(year, month));\n                    }}\n                    previous={true}\n                    src=\"https://image.flaticon.com/icons/svg/137/137517.svg\"\n                />\n                <h1>\n                    {monthName[month - 1]}-{year}\n                </h1>\n                <ChangeMonth\n                    onClick={() => {\n                        month += 1;\n                        if (month > 12) {\n                            year++;\n                            month = 1;\n                        }\n                        setDaysInMonth(changeMonth(year, month));\n                    }}\n                    src=\"https://image.flaticon.com/icons/svg/137/137517.svg\"\n                />\n            </Header>\n            <Wrapper>\n                {weekdayshort.map((day) => {\n                    return <DayName key={day}>{day}</DayName>;\n                })}\n                {daysInMonth.map((day, i) => {\n                    return (\n                        <DayContainer\n                            user={props.user}\n                            year={year}\n                            month={month}\n                            day={day}\n                            TODAY={TODAY}\n                            allEvents={allEvents}\n                            getEvents={getData}\n                            key={day || i * -1}\n                        />\n                    );\n                })}\n            </Wrapper>\n        </Container>\n    );\n};\nexport default Calendar;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Wrapper = styled.div`\n    height: 100vh;\n    width: 100vw;\n    color: white;\n    background: #222331;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Form = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\nlet name = '';\nlet email = '';\n\nconst Login = (props) => {\n    return (\n        <Wrapper>\n            <Form>\n                Name:\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={(e) => {\n                        name = e.target.value;\n                    }}\n                />\n                Email:\n                <input\n                    type=\"text\"\n                    name=\"Email\"\n                    onChange={(e) => {\n                        email = e.target.value;\n                    }}\n                />\n                <button\n                    type=\"submit\"\n                    value=\"Submit\"\n                    onClick={() => {\n                        localStorage.setItem(\n                            'user',\n                            JSON.stringify({ name: name, email: email })\n                        );\n                        props.setUser({ name, email });\n                    }}\n                >\n                    Submit\n                </button>\n            </Form>\n        </Wrapper>\n    );\n};\nexport default Login;\n","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Calendar from './components/Calendar';\r\nimport Login from './components/Login';\r\nconst Wrapper = styled.div`\r\n    min-height: 100vh;\r\n    background: #222331;\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nfunction App() {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\r\n    if (!user) {\r\n        return <Login setUser={setUser} />;\r\n    }\r\n    return (\r\n        <Wrapper>\r\n            <Calendar user={user} />\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}