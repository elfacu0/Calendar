{"version":3,"sources":["api/calendar.js","components/Event.jsx","components/CreateEvent.jsx","components/DayContainer.jsx","components/Calendar.jsx","components/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","addEvent","props","a","requestOptions","method","headers","body","JSON","stringify","fetch","response","json","data","getEvents","deleteEvent","id","addAttendee","_id","attendee","changeAttendeeResponse","modifyEvent","newDescription","newSummary","newStartDate","newEndDate","Wrapper","styled","div","Container","Divisor","hr","EventTitle","Creator","Duration","Description","User","Attendees","P","p","Attendance","Event","user","name","email","event","summary","created","updated","start","end","description","color","creator","attendees","useState","isModifying","setIsModifying","setNewSummary","setNewDescription","slice","setNewStartDate","setNewEndDate","saveChanges","updateAttendance","res","displayName","organizer","self","responseStatus","background","Form","Group","as","Col","controlId","Label","Control","required","placeholder","value","onChange","e","target","OverlayTrigger","trigger","placement","rootClose","overlay","Popover","Title","Content","Button","variant","onClick","type","min","map","key","CreateEvent","year","month","day","setSummary","setColor","setDescription","Date","setEndDate","sendForm","preventDefault","onSubmit","Row","Day","today","DayWrapper","EventsContainer","Evento","monthNames","splitDate","date","splitedDate","split","splitedDay","parseInt","DayContainer","TODAY","show","setShow","allEvents","handleClose","startDate","endDate","Modal","onHide","size","dialogClassName","className","Header","closeButton","Body","Carousel","Item","Footer","LoadingContainer","ChangeMonth","img","previous","DayName","monthName","getFullYear","getMonth","getDate","changeMonth","daysInMonth","firstDayOfMonth","firstDay","moment","startOf","format","Number","getFirstDayOfMonth","CantDaysInMonth","i","push","Calendar","setDaysInMonth","setAllEvents","showFetchError","setShowFetchError","fetchingData","setFetchingData","getData","console","log","useEffect","weekdayshort","weekdaysShort","Alert","Spinner","animation","onClose","dismissible","Heading","src","Login","localStorage","setItem","setUser","App","parse","getItem","Boolean","window","location","hostname","match","unregister","navigator","serviceWorker","ready","then","registration","catch","error","message","ReactDOM","render","document","getElementById"],"mappings":"oXAAMA,EAAW,8CAEV,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,mBAAAC,EAAA,6DAEGC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAL,eAAoBP,KAL3B,SAOoBQ,MAAM,GAAD,OAAIV,EAAJ,aAAyBI,GAPlD,cAOGO,EAPH,gBAQgBA,EAASC,OARzB,cAQGC,EARH,yBASIA,GATJ,4C,sBAYA,SAAeC,IAAtB,+B,4CAAO,8BAAAX,EAAA,sEACoBO,MAAM,GAAD,OAAIV,EAAJ,eADzB,cACGW,EADH,gBAEgBA,EAASC,OAFzB,cAEGC,EAFH,yBAGIA,GAHJ,4C,sBAMA,SAAeE,EAAtB,kC,4CAAO,WAA2BC,GAA3B,mBAAAb,EAAA,6DACGC,EAAiB,CACnBC,OAAQ,UAFT,SAIoBK,MAAM,GAAD,OACrBV,EADqB,wBACGgB,GAC3BZ,GAND,cAIGO,EAJH,gBAQgBA,EAASC,OARzB,cAQGC,EARH,yBASIA,GATJ,4C,sBAYA,SAAeI,EAAtB,kC,4CAAO,WAA2Bf,GAA3B,uBAAAC,EAAA,6DACKe,EAAkBhB,EAAlBgB,IAAKC,EAAajB,EAAbiB,SACPf,EAAiB,CACnBC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUU,IALtB,SAOoBT,MAAM,GAAD,OACrBV,EADqB,wBACGkB,GAC3Bd,GATD,cAOGO,EAPH,gBAWgBA,EAASC,OAXzB,cAWGC,EAXH,yBAYIA,GAZJ,4C,sBAeA,SAAeO,EAAtB,kC,4CAAO,WAAsClB,GAAtC,uBAAAC,EAAA,6DACKe,EAAkBhB,EAAlBgB,IAAKC,EAAajB,EAAbiB,SACPf,EAAiB,CACnBC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUU,IALtB,SAOoBT,MAAM,GAAD,OACrBV,EADqB,iCACYkB,GACpCd,GATD,cAOGO,EAPH,gBAWgBA,EAASC,OAXzB,cAWGC,EAXH,yBAYIA,GAZJ,4C,sBAeA,SAAeQ,EAAtB,kC,4CAAO,WAA2BnB,GAA3B,6BAAAC,EAAA,6DACKe,EAA8DhB,EAA9DgB,IAAKI,EAAyDpB,EAAzDoB,eAAgBC,EAAyCrB,EAAzCqB,WAAYC,EAA6BtB,EAA7BsB,aAAcC,EAAevB,EAAfuB,WAEjDrB,EAAiB,CACnBC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBa,iBACAC,aACAC,eACAC,gBAVL,SAaoBf,MAAM,GAAD,OACrBV,EADqB,wBACGkB,GAC3Bd,GAfD,cAaGO,EAbH,gBAiBgBA,EAASC,OAjBzB,cAiBGC,EAjBH,yBAkBIA,GAlBJ,4C,2jDCnDP,IAAMa,EAAUC,IAAOC,IAAV,KAQPC,EAAYF,IAAOC,IAAV,KAWTE,EAAUH,IAAOI,GAAV,KAOPC,EAAaL,IAAOC,IAAV,KACVK,EAAUN,IAAOC,IAAV,KAKPM,GAAWP,IAAOC,IAAV,KAMRO,GAAcR,IAAOC,IAAV,KAIXQ,GAAOT,IAAOC,IAAV,KAQJS,GAAYV,IAAOC,IAAV,KAMTU,GAAIX,IAAOY,EAAV,KAIDC,GAAab,IAAOC,IAAV,KA6ODa,GA3OD,SAACvC,GAAW,IAAD,EACGA,EAAMwC,KAAtBC,EADa,EACbA,KAAMC,EADO,EACPA,MADO,EAWjB1C,EAAM2C,MARNC,EAHiB,EAGjBA,QACAC,EAJiB,EAIjBA,QACAC,EALiB,EAKjBA,QACAC,EANiB,EAMjBA,MACAC,EAPiB,EAOjBA,IACAC,EARiB,EAQjBA,YAEAjC,GAViB,EASjBkC,MATiB,EAUjBlC,KAViB,EAYUhB,EAAM2C,MAA7BQ,EAZa,EAYbA,QAASC,EAZI,EAYJA,UAZI,EAciBC,oBAAS,GAd1B,mBAcdC,EAdc,KAcDC,EAdC,OAeeF,mBAAST,GAfxB,mBAedvB,EAfc,KAeFmC,EAfE,OAgBuBH,mBAASJ,GAhBhC,mBAgBd7B,EAhBc,KAgBEqC,EAhBF,OAiBmBJ,mBAAS,GAAD,OAAIN,EAAMW,MAAM,EAAG,MAjB9C,mBAiBdpC,EAjBc,KAiBAqC,EAjBA,OAkBeN,mBAAS,GAAD,OAAIL,EAAIU,MAAM,EAAG,MAlBxC,mBAkBdnC,EAlBc,KAkBFqC,EAlBE,KAoBfC,GAAW,uCAAG,sBAAA5D,EAAA,sEACVkB,EAAY,CACdH,MACAK,aACAD,iBACAE,eACAC,eANY,OAQhBvB,EAAMY,YARU,2CAAH,qDAWXkD,GAAgB,uCAAG,WAAOC,EAAK/C,GAAZ,eAAAf,EAAA,6DACfgB,EAAW,CACbH,GAAI,EACJ4B,MAAOA,EACPsB,YAAavB,EACbwB,WAAW,EACXC,MAAM,EACNC,eAAgBJ,GAPC,SASC7C,EAAuB,CACzCF,MACAC,aAXiB,iDAcXF,EAAY,CAAEC,MAAKC,aAdR,OAgBrBjB,EAAMY,YAhBe,2CAAH,wDAmBtB,OACI,kBAACY,EAAD,KACI,kBAACG,EAAD,CAAWyC,YAAY,GACnB,kBAACtC,EAAD,MACqB,IAAhBwB,EACG,kBAACe,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAC3B,kBAACJ,EAAA,EAAKK,MAAN,gBACA,kBAACL,EAAA,EAAKM,QAAN,CACIC,UAAQ,EACRC,YAAY,UACZC,MAAOzD,EACP0D,SAAU,SAACC,GAAD,OAAOxB,EAAcwB,EAAEC,OAAOH,WAIhD,4BAAKlC,GAGRF,IAAUS,EAAQT,OACf,oCACI,kBAACwC,EAAA,EAAD,CACIC,QAAQ,QACRC,UAAU,SACVC,WAAW,EACXC,QACI,kBAACC,EAAA,EAAD,CAASzE,GAAE,6BACP,kBAACyE,EAAA,EAAQC,MAAT,CAAejB,GAAG,MAAlB,iBAGA,kBAACgB,EAAA,EAAQE,QAAT,KACI,kBAACC,EAAA,EAAD,CACIC,QAAQ,SACRC,QAAO,sBAAE,sBAAA3F,EAAA,sEACCY,EAAYG,GADb,OAELhB,EAAMY,YAFD,4CAFb,UAaZ,kBAAC8E,EAAA,EAAD,CAAQC,QAAQ,UAAhB,WACc,KAGzBjD,IAAUS,EAAQT,OACf,kBAACgD,EAAA,EAAD,CACIC,QAAQ,YACRC,QAAS,WACLrC,GAAe,KAHvB,WASa,IAAhBD,GACG,kBAACoC,EAAA,EAAD,CACIC,QAAQ,UACRC,QAAS,WACLrC,GAAe,GACfM,OAJR,SAWR,kBAACjC,EAAD,MACA,kBAACG,EAAD,KACI,uCACA,kBAACG,GAAD,KACI,kBAACE,GAAD,KAAIe,EAAQa,aACZ,kBAAC5B,GAAD,KAAIe,EAAQT,SAIpB,kBAACd,EAAD,MACA,kBAACI,GAAD,MACqB,IAAhBsB,EACG,6BACI,iDACA,6BACA,2BACIuC,KAAK,OACLd,SAAU,SAACC,GAAD,OACNrB,EAAgBqB,EAAEC,OAAOH,QAE7BA,MAAOxD,KAIf,kBAACc,GAAD,eAAWW,EAAMW,MAAM,EAAG,MAEb,IAAhBJ,EACG,6BACI,+CACA,6BACA,2BACIuC,KAAK,OACLC,IAAKxE,EACLyD,SAAU,SAACC,GAAD,OAAOpB,EAAcoB,EAAEC,OAAOH,QACxCA,MAAOvD,KAIf,kBAACa,GAAD,aAASY,EAAIU,MAAM,EAAG,KAE1B,kBAACtB,GAAD,iBAAaS,EAAQa,MAAM,EAAG,KAC9B,kBAACtB,GAAD,iBAAaU,EAAQY,MAAM,EAAG,MAElC,kBAAC9B,EAAD,MACA,kBAACK,GAAD,KACI,4CAEiB,IAAhBqB,EACG,kBAACe,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKC,UAAU,kBAC3B,kBAACJ,EAAA,EAAKM,QAAN,CACIC,UAAQ,EACRC,YAAY,cACZC,MAAO1D,EACP2D,SAAU,SAACC,GAAD,OACNvB,EAAkBuB,EAAEC,OAAOH,WAKvC,kBAAC1C,GAAD,KAAIa,IAGZ,kBAACrB,EAAD,MACA,yCACA,kBAACO,GAAD,KACKiB,EAAU2C,KAAI,SAAC9E,GACZ,OACI,kBAACiB,GAAD,CACI8D,IAAG,UAAK/E,EAAS+C,YAAd,YAA6B/C,EAASyB,QAEzC,kBAACN,GAAD,KAAInB,EAAS+C,aACb,kBAAC5B,GAAD,KAAInB,EAASyB,OACb,kBAACN,GAAD,iBACc,IACTnB,EAASkD,eACJ,WAC4B,OAA5BlD,EAASkD,eACT,MACA,iBAM1B,kBAACvC,EAAD,MACA,kBAACU,GAAD,KACI,0CACA,kBAACoD,EAAA,EAAD,CACIC,QAAQ,UACRC,QAAS,WACL9B,IAAiB,EAAM9C,KAH/B,OAOU,IACV,kBAAC0E,EAAA,EAAD,CACIC,QAAQ,YACRC,QAAS,WACL9B,GAAiB,KAAM9C,KAH/B,OAOU,IACV,kBAAC0E,EAAA,EAAD,CACIC,QAAQ,SACRC,QAAS,WACL9B,IAAiB,EAAO9C,KAHhC,MAOU,Q,4bCxS9B,IAAMQ,GAAUC,IAAOC,IAAV,MAQPC,GAAYF,IAAOC,IAAV,MA6FAuE,GAlFK,SAACjG,GAAW,IACtBkG,EAAqBlG,EAArBkG,KAAMC,EAAenG,EAAfmG,MAAOC,EAAQpG,EAARoG,IACnBD,EAAQA,EAAQ,GAAK,IAAMA,EAAQA,EACnCC,EAAMA,EAAM,GAAK,IAAMA,EAAMA,EAC7B,IAAMrD,EAAK,UAAMmD,EAAN,YAAcC,EAAd,YAAuBC,GAJP,EAKG/C,mBAAS,IALZ,mBAKpBT,EALoB,KAKXyD,EALW,OAMDhD,mBAAS,IANR,mBAMpBH,EANoB,KAMboD,EANa,OAOWjD,mBAAS,IAPpB,mBAOpBJ,EAPoB,KAOPsD,EAPO,OAQDlD,mBAAS,IAAImD,KAAKzD,IARjB,mBAQpBC,EARoB,KAQfyD,EARe,OASHzG,EAAMwC,KAAtBC,EATmB,EASnBA,KAEFU,EAAU,CACZrC,GAAI,GACJ4B,MAbuB,EASbA,MAKVsB,YAAavB,EACbyB,MAAM,GAGJwC,EAAQ,uCAAG,WAAO1B,GAAP,SAAA/E,EAAA,6DACb+E,EAAE2B,iBADW,SAEP5G,EAAS,CACX6C,UACAO,UACAD,QACAD,cACAD,IAAKA,EACLD,MAAO,IAAIyD,KAAKzD,KARP,OAUb/C,EAAMY,YAVO,2CAAH,sDAad,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,KACI,gDACA,kBAACyD,EAAA,EAAD,CAAMuC,SAAUF,GACZ,kBAACrC,EAAA,EAAKwC,IAAN,KACI,kBAACxC,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKC,UAAU,eAC3B,kBAACJ,EAAA,EAAKK,MAAN,gBACA,kBAACL,EAAA,EAAKM,QAAN,CACIC,UAAQ,EACRC,YAAY,WACZE,SAAU,SAACC,GAAD,OAAOqB,EAAWrB,EAAEC,OAAOH,WAI7C,kBAACT,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKC,UAAU,aAC3B,kBAACJ,EAAA,EAAKK,MAAN,cACA,kBAACL,EAAA,EAAKM,QAAN,CACIE,YAAY,UACZE,SAAU,SAACC,GAAD,OAAOsB,EAAStB,EAAEC,OAAOH,YAI/C,kBAACT,EAAA,EAAKC,MAAN,CAAYG,UAAU,mBAClB,kBAACJ,EAAA,EAAKK,MAAN,oBACA,kBAACL,EAAA,EAAKM,QAAN,CACIC,UAAQ,EACRC,YAAY,uBACZE,SAAU,SAACC,GAAD,OAAOuB,EAAevB,EAAEC,OAAOH,WAIjD,kBAACT,EAAA,EAAKC,MAAN,CAAYG,UAAU,eAClB,kBAACJ,EAAA,EAAKK,MAAN,iBACA,6BACA,2BACImB,KAAK,OACLC,IAAK/C,EACL+B,MAAO/B,EACPgC,SAAU,SAACC,GAAD,OAAOyB,EAAWzB,EAAEC,OAAOH,WAI7C,kBAACY,EAAA,EAAD,CAAQC,QAAQ,UAAUE,KAAK,UAA/B,c,41BC5FpB,IAAMiB,GAAMrF,IAAOC,IAAV,MAMS,SAAC1B,GAAD,OAAYA,EAAM+G,MAAQ,UAAY,MAQlDC,GAAavF,IAAOC,IAAV,MAQVuF,GAAkBxF,IAAOC,IAAV,MAQfwF,GAASzF,IAAOC,IAAV,MAGM,SAAC1B,GAAD,OAAWA,EAAMkD,OAAS,SAGtCiE,GAAa,CACf,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGJ,SAASC,GAAUC,GACf,IAAIC,EAAcD,EAAKE,MAAM,KACvBC,EAAaF,EAAY,GAAG5D,MAAM,EAAG,GAG3C,OAFA4D,EAAY,GAAKE,EACjBH,EAAOC,EAAYvB,KAAI,SAACf,GAAD,OAAOyC,SAASzC,MAI3C,IAuGe0C,GAvGM,SAAC1H,GAAW,IACrBkG,EAA4BlG,EAA5BkG,KAAMC,EAAsBnG,EAAtBmG,MAAOC,EAAepG,EAAfoG,IAAKuB,EAAU3H,EAAV2H,MADE,EAEJtE,oBAAS,GAFL,mBAErBuE,EAFqB,KAEfC,EAFe,KAGtBC,EAAY9H,EAAM8H,UAClBC,EAAc,kBAAMF,GAAQ,IAGlC,OACI,oCACI,kBAACf,GAAD,CACIC,MAAO,UAAGb,EAAH,YAAWC,EAAX,YAAoBC,KAAUuB,EACrC/B,QANO,kBAAMiC,GAAQ,KAQrB,kBAACb,GAAD,KACI,8BAAOZ,GAAO,KAEjBA,GACG,kBAACa,GAAD,KACKa,EAAU/B,KAAI,SAACpD,GACZ,IAAIqF,EAAYZ,GAAUzE,EAAMI,OAC5BkF,EAAUb,GAAUzE,EAAMK,KAC9B,OACIkD,GAAQ8B,EAAU,IAClB9B,GAAQ+B,EAAQ,IAChB9B,GAAS6B,EAAU,IACnB7B,GAAS8B,EAAQ,IACjB7B,EAAc,GAARD,GACF6B,EAAU,GAAoB,GAAfA,EAAU,IAC7B5B,EAAc,GAARD,GAAc8B,EAAQ,GAAkB,GAAbA,EAAQ,GAGrC,kBAACf,GAAD,CACIlB,IAAKrD,EAAM3B,IACXkC,MAAOP,EAAMO,QAIlB,QAKtBkD,GACG,kBAAC8B,EAAA,EAAD,CACIN,KAAMA,EACNO,OAAQJ,EACRK,KAAK,KACLC,gBAAgB,8BAChBC,UAAU,iBAEV,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,EAAA,EAAM1C,MAAP,KACKY,EADL,IACWe,GAAWhB,EAAQ,KAGlC,kBAAC+B,EAAA,EAAMO,KAAP,KACI,kBAACC,EAAA,EAAD,KACKZ,EAAU/B,KAAI,SAACpD,GACZ,IAAIqF,EAAYZ,GAAUzE,EAAMI,OAC5BkF,EAAUb,GAAUzE,EAAMK,KAC9B,OACIkD,GAAQ8B,EAAU,IAClB9B,GAAQ+B,EAAQ,IAChB9B,GAAS6B,EAAU,IACnB7B,GAAS8B,EAAQ,IACjB7B,EAAc,GAARD,GACF6B,EAAU,GAAoB,GAAfA,EAAU,IAC7B5B,EAAc,GAARD,GACF8B,EAAQ,GAAkB,GAAbA,EAAQ,GAGrB,kBAACS,EAAA,EAASC,KAAV,CAAe3C,IAAKrD,EAAM3B,KACtB,kBAAC,GAAD,CACIwB,KAAMxC,EAAMwC,KACZG,MAAOA,EACP/B,UAAWZ,EAAMY,aAK1B,MAEX,kBAAC8H,EAAA,EAASC,KAAV,KACI,kBAAC,GAAD,CACIzC,KAAMA,EACNC,MAAOA,EACPC,IAAKA,EACLxF,UAAWZ,EAAMY,UACjB4B,KAAMxC,EAAMwC,UAK5B,kBAAC0F,EAAA,EAAMU,OAAP,KACI,kBAAClD,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASmC,GAArC,c,g8CCxJxB,IAAMpG,GAAYF,IAAOC,IAAV,MASTmH,GAAmBpH,IAAOC,IAAV,MAMhB6G,GAAS9G,IAAOC,IAAV,MAQNoH,GAAcrH,IAAOsH,IAAV,MAMX,SAAC/I,GAAD,OAAYA,EAAMgJ,SAAW,2BAA6B,MAM1DxH,GAAUC,IAAOC,IAAV,MAUPuH,GAAUxH,IAAOC,IAAV,MAMK,SAAC1B,GAAD,OAA4B,IAAhBA,EAAM+G,MAAiB,UAAY,MAO3DM,GAAO,IAAIb,KACX0C,GAAY,CACd,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEAhD,GAAOmB,GAAK8B,cACZhD,GAAQkB,GAAK+B,WAAa,EACxBzB,GAAK,UAAMzB,GAAN,YAAcC,GAAd,YAAuBkB,GAAKgC,WAEhC,SAASC,GAAYpD,EAAMC,GAC9B,IAAIoD,EAAc,GAelB,IAHA,IAAIC,EAXJ,WACI,IAAIC,EAAWC,IAAO,GAAD,OAAIxD,EAAJ,YAAYC,GAAS,WACrCwD,QAAQ,SACRC,OAAO,KACZ,OAAOC,OAAOJ,GAOIK,GAClBC,EAJOF,OAAOH,IAAO,GAAD,OAAIxD,EAAJ,YAAYC,GAAS,WAAWoD,eAM/CS,EAAI,EAAGA,EAAI,GAAIA,IAChBA,EAAIR,GAAmBQ,EAAIR,EAAkB,EAAIO,EACjDR,EAAYU,KAAK,IAGrBV,EAAYU,KAAKD,EAAIR,EAAkB,GAE3C,OAAOD,EAGX,IAiGeW,GAjGE,SAAClK,GAAW,IAAD,EACcqD,mBAASiG,MADvB,mBACjBC,EADiB,KACJY,EADI,OAEU9G,mBAAS,IAFnB,mBAEjByE,EAFiB,KAENsC,EAFM,OAGoB/G,oBAAS,GAH7B,mBAGjBgH,EAHiB,KAGDC,EAHC,OAIgBjH,oBAAS,GAJzB,mBAIjBkH,EAJiB,KAIHC,EAJG,cAMTC,IANS,2EAMxB,4BAAAxK,EAAA,+EAE2BW,IAF3B,OAEcD,EAFd,OAGQyJ,EAAazJ,GACb2J,GAAkB,GAClBE,GAAgB,GAChBE,QAAQC,IAAI,8BANpB,kDAQQD,QAAQC,IAAR,MACAL,GAAkB,GAT1B,2DANwB,sBAmBxBM,qBAAU,WACNT,EAAeb,GAAYpD,GAAMC,KACjCsE,MACD,IAEH,IAAII,EAAenB,IAAOoB,gBAC1B,OACI,kBAAC,GAAD,KACKP,GACG,kBAACQ,EAAA,EAAD,CAAO/E,IAAI,WAAWL,QAAQ,WAC1B,kBAACkD,GAAD,KACI,6CACA,kBAACmC,EAAA,EAAD,CAASC,UAAU,OAAO7C,KAAK,OAC/B,kBAAC4C,EAAA,EAAD,CAASC,UAAU,OAAO7C,KAAK,OAC/B,kBAAC4C,EAAA,EAAD,CAASC,UAAU,OAAO7C,KAAK,SAI1CiC,GACG,kBAACU,EAAA,EAAD,CACIpF,QAAQ,SACRuF,QAAS,kBAAMZ,GAAkB,IACjCa,aAAW,GAEX,kBAACJ,EAAA,EAAMK,QAAP,kBACA,wDAGR,kBAAC7C,GAAD,KACI,kBAACO,GAAD,CACIlD,QAAS,YACLO,IAAS,IACI,IACTD,KACAC,GAAQ,IAEZgE,EAAeb,GAAYpD,GAAMC,MAErC6C,UAAU,EACVqC,IAAI,wDAER,4BACKnC,GAAU/C,GAAQ,GADvB,IAC4BD,IAE5B,kBAAC4C,GAAD,CACIlD,QAAS,YACLO,IAAS,GACG,KACRD,KACAC,GAAQ,GAEZgE,EAAeb,GAAYpD,GAAMC,MAErCkF,IAAI,yDAGZ,kBAAC,GAAD,KACKR,EAAa9E,KAAI,SAACK,GACf,OAAO,kBAAC6C,GAAD,CAASjD,IAAKI,GAAMA,MAE9BmD,EAAYxD,KAAI,SAACK,EAAK4D,GACnB,OACI,kBAAC,GAAD,CACIxH,KAAMxC,EAAMwC,KACZ0D,KAAMA,GACNC,MAAOA,GACPC,IAAKA,EACLuB,MAAOA,GACPG,UAAWA,EACXlH,UAAW6J,EACXzE,IAAKI,IAAY,EAAL4D,U,yOCnMxC,IAAMxI,GAAUC,IAAOC,IAAV,MAUTe,GAAO,GACPC,GAAQ,GAkDG4I,GAhDD,SAACtL,GACX,OACI,kBAAC,GAAD,KACI,kBAACqE,EAAA,EAAD,CACIuC,SAAU,SAAC5B,GACPA,EAAE2B,iBACF4E,aAAaC,QACT,OACAlL,KAAKC,UAAU,CAAEkC,KAAMA,GAAMC,MAAOA,MAExC1C,EAAMyL,QAAQ,CAAEhJ,QAAMC,aAG1B,kBAAC2B,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKC,UAAU,YAC3B,kBAACJ,EAAA,EAAKK,MAAN,aACA,kBAACL,EAAA,EAAKM,QAAN,CACII,SAAU,SAACC,GACPvC,GAAOuC,EAAEC,OAAOH,OAEpBF,UAAQ,EACRiB,KAAK,OACLhB,YAAY,OACZpC,KAAK,UAIb,kBAAC4B,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKC,UAAU,iBAC3B,kBAACJ,EAAA,EAAKK,MAAN,cACA,kBAACL,EAAA,EAAKM,QAAN,CACII,SAAU,SAACC,GACPtC,GAAQsC,EAAEC,OAAOH,OAErBF,UAAQ,EACRiB,KAAK,QACLhB,YAAY,cACZpC,KAAK,WAIb,kBAAC4B,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAC3B,kBAACiB,EAAA,EAAD,CAAQC,QAAQ,UAAUE,KAAK,UAA/B,c,yNCtDpB,IAAMrE,GAAUC,IAAOC,IAAV,MAqBEgK,OAZf,WAAgB,IAAD,EACarI,mBAAS/C,KAAKqL,MAAMJ,aAAaK,QAAQ,UADtD,mBACJpJ,EADI,KACEiJ,EADF,KAEX,OAAKjJ,EAID,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAUA,KAAMA,KAJb,kBAAC,GAAD,CAAOiJ,QAASA,KCJXI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAgHC,SAASC,KACV,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaL,gBAEdM,OAAM,SAAAC,GACL/B,QAAQ+B,MAAMA,EAAMC,YCnI5BC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SACjDV,KAKAA,O","file":"static/js/main.bcf72d18.chunk.js","sourcesContent":["const BASE_URL = 'https://evening-springs-90377.herokuapp.com';\n\nexport async function addEvent(props) {\n    // POST request using fetch with async/await\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ ...props }),\n    };\n    const response = await fetch(`${BASE_URL}/addEvent`, requestOptions);\n    const data = await response.json();\n    return data;\n}\n\nexport async function getEvents() {\n    const response = await fetch(`${BASE_URL}/getEvents`);\n    const data = await response.json();\n    return data;\n}\n\nexport async function deleteEvent(id) {\n    const requestOptions = {\n        method: 'DELETE',\n    };\n    const response = await fetch(\n        `${BASE_URL}/deleteEvent/${id}`,\n        requestOptions\n    );\n    const data = await response.json();\n    return data;\n}\n\nexport async function addAttendee(props) {\n    const { _id, attendee } = props;\n    const requestOptions = {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(attendee),\n    };\n    const response = await fetch(\n        `${BASE_URL}/addAttendee/${_id}`,\n        requestOptions\n    );\n    const data = await response.json();\n    return data;\n}\n\nexport async function changeAttendeeResponse(props) {\n    const { _id, attendee } = props;\n    const requestOptions = {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(attendee),\n    };\n    const response = await fetch(\n        `${BASE_URL}/updateResponseStatus/${_id}`,\n        requestOptions\n    );\n    const data = await response.json();\n    return data;\n}\n\nexport async function modifyEvent(props) {\n    const { _id, newDescription, newSummary, newStartDate, newEndDate } = props;\n\n    const requestOptions = {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            newDescription,\n            newSummary,\n            newStartDate,\n            newEndDate,\n        }),\n    };\n    const response = await fetch(\n        `${BASE_URL}/modifyEvent/${_id}`,\n        requestOptions\n    );\n    const data = await response.json();\n    return data;\n}\n","import React, { useState } from 'react';\nimport { Form, Button, Col, OverlayTrigger, Popover } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styled from '@emotion/styled';\nimport {\n    addAttendee,\n    changeAttendeeResponse,\n    deleteEvent,\n    modifyEvent,\n} from '../api/calendar';\n\nconst Wrapper = styled.div`\n    color: white;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    margin-bottom: 20px;\n`;\n\nconst Container = styled.div`\n    color: white;\n    max-width: 400px;\n    background: #23232b;\n    padding: 20px;\n    border-radius = 10px;\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n`;\n\nconst Divisor = styled.hr`\n    width: 100%;\n    border-top: 2px solid #ffffff;\n    margin-top: 8px;\n    margin-bottom: 8px;\n`;\n\nconst EventTitle = styled.div``;\nconst Creator = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`;\nconst Duration = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n`;\n\nconst Description = styled.div`\n    width: 70%;\n`;\n\nconst User = styled.div`\n    background: #6c757d;\n    padding: 5px;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Attendees = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n`;\n\nconst P = styled.p`\n    margin-bottom: 2px;\n`;\n\nconst Attendance = styled.div``;\n\nconst Event = (props) => {\n    const { name, email } = props.user;\n    const {\n        summary,\n        created,\n        updated,\n        start,\n        end,\n        description,\n        color,\n        _id,\n    } = props.event;\n    const { creator, attendees } = props.event;\n\n    const [isModifying, setIsModifying] = useState(false);\n    const [newSummary, setNewSummary] = useState(summary);\n    const [newDescription, setNewDescription] = useState(description);\n    const [newStartDate, setNewStartDate] = useState(`${start.slice(0, 10)}`);\n    const [newEndDate, setNewEndDate] = useState(`${end.slice(0, 10)}`);\n\n    const saveChanges = async () => {\n        await modifyEvent({\n            _id,\n            newSummary,\n            newDescription,\n            newStartDate,\n            newEndDate,\n        });\n        props.getEvents();\n    };\n\n    const updateAttendance = async (res, _id) => {\n        const attendee = {\n            id: 1,\n            email: email,\n            displayName: name,\n            organizer: false,\n            self: true,\n            responseStatus: res,\n        };\n        const updated = await changeAttendeeResponse({\n            _id,\n            attendee,\n        });\n        if (!updated) {\n            await addAttendee({ _id, attendee });\n        }\n        props.getEvents();\n    };\n\n    return (\n        <Wrapper>\n            <Container background={false && color}>\n                <EventTitle>\n                    {isModifying === true ? (\n                        <Form.Group as={Col} controlId=\"newSumarry\">\n                            <Form.Label>Summary</Form.Label>\n                            <Form.Control\n                                required\n                                placeholder=\"Summary\"\n                                value={newSummary}\n                                onChange={(e) => setNewSummary(e.target.value)}\n                            />\n                        </Form.Group>\n                    ) : (\n                        <h2>{summary}</h2>\n                    )}\n\n                    {email === creator.email && (\n                        <>\n                            <OverlayTrigger\n                                trigger=\"click\"\n                                placement=\"bottom\"\n                                rootClose={true}\n                                overlay={\n                                    <Popover id={`popover-positioned-bottom`}>\n                                        <Popover.Title as=\"h3\">\n                                            Are you sure?\n                                        </Popover.Title>\n                                        <Popover.Content>\n                                            <Button\n                                                variant=\"danger\"\n                                                onClick={async () => {\n                                                    await deleteEvent(_id);\n                                                    props.getEvents();\n                                                }}\n                                            >\n                                                YES\n                                            </Button>\n                                        </Popover.Content>\n                                    </Popover>\n                                }\n                            >\n                                <Button variant=\"danger\">DELETE</Button>\n                            </OverlayTrigger>{' '}\n                        </>\n                    )}\n                    {email === creator.email && (\n                        <Button\n                            variant=\"secondary\"\n                            onClick={() => {\n                                setIsModifying(true);\n                            }}\n                        >\n                            MODIFY\n                        </Button>\n                    )}\n                    {isModifying === true && (\n                        <Button\n                            variant=\"success\"\n                            onClick={() => {\n                                setIsModifying(false);\n                                saveChanges();\n                            }}\n                        >\n                            SAVE\n                        </Button>\n                    )}\n                </EventTitle>\n                <Divisor />\n                <Creator>\n                    <h3>Creator</h3>\n                    <User>\n                        <P>{creator.displayName}</P>\n                        <P>{creator.email}</P>\n                    </User>\n                </Creator>\n\n                <Divisor />\n                <Duration>\n                    {isModifying === true ? (\n                        <div>\n                            <label>New Start Date</label>\n                            <br></br>\n                            <input\n                                type=\"date\"\n                                onChange={(e) =>\n                                    setNewStartDate(e.target.value)\n                                }\n                                value={newStartDate}\n                            />\n                        </div>\n                    ) : (\n                        <P>Start: {start.slice(0, 10)}</P>\n                    )}\n                    {isModifying === true ? (\n                        <div>\n                            <label>New End Date</label>\n                            <br></br>\n                            <input\n                                type=\"date\"\n                                min={newStartDate}\n                                onChange={(e) => setNewEndDate(e.target.value)}\n                                value={newEndDate}\n                            />\n                        </div>\n                    ) : (\n                        <P>End: {end.slice(0, 10)}</P>\n                    )}\n                    <P>created: {created.slice(0, 10)}</P>\n                    <P>Updated: {updated.slice(0, 10)}</P>\n                </Duration>\n                <Divisor />\n                <Description>\n                    <h3>Description</h3>\n\n                    {isModifying === true ? (\n                        <Form.Group as={Col} controlId=\"newDescription\">\n                            <Form.Control\n                                required\n                                placeholder=\"Description\"\n                                value={newDescription}\n                                onChange={(e) =>\n                                    setNewDescription(e.target.value)\n                                }\n                            />\n                        </Form.Group>\n                    ) : (\n                        <P>{description}</P>\n                    )}\n                </Description>\n                <Divisor />\n                <h3>Attendees</h3>\n                <Attendees>\n                    {attendees.map((attendee) => {\n                        return (\n                            <User\n                                key={`${attendee.displayName}-${attendee.email}`}\n                            >\n                                <P>{attendee.displayName}</P>\n                                <P>{attendee.email}</P>\n                                <P>\n                                    Response:{' '}\n                                    {attendee.responseStatus\n                                        ? 'Positive'\n                                        : attendee.responseStatus === null\n                                        ? 'N/a'\n                                        : 'Negative'}\n                                </P>\n                            </User>\n                        );\n                    })}\n                </Attendees>\n                <Divisor />\n                <Attendance>\n                    <h3>Attendance</h3>\n                    <Button\n                        variant=\"success\"\n                        onClick={() => {\n                            updateAttendance(true, _id);\n                        }}\n                    >\n                        Yes\n                    </Button>{' '}\n                    <Button\n                        variant=\"secondary\"\n                        onClick={() => {\n                            updateAttendance(null, _id);\n                        }}\n                    >\n                        N/a\n                    </Button>{' '}\n                    <Button\n                        variant=\"danger\"\n                        onClick={() => {\n                            updateAttendance(false, _id);\n                        }}\n                    >\n                        No\n                    </Button>{' '}\n                </Attendance>\n            </Container>\n        </Wrapper>\n    );\n};\nexport default Event;\n","import React, { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport styled from '@emotion/styled';\r\nimport { addEvent } from '../api/calendar';\r\n\r\nconst Wrapper = styled.div`\r\n    color: white;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    color: white;\r\n    max-width: 400px;\r\n    background: #23232b;\r\n    padding: 20px;\r\n    border-radius = 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: auto;\r\n`;\r\n\r\nconst CreateEvent = (props) => {\r\n    let { year, month, day } = props;\r\n    month = month < 10 ? '0' + month : month;\r\n    day = day < 10 ? '0' + day : day;\r\n    const start = `${year}-${month}-${day}`;\r\n    const [summary, setSummary] = useState('');\r\n    const [color, setColor] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [end, setEndDate] = useState(new Date(start));\r\n    const { name, email } = props.user;\r\n\r\n    const creator = {\r\n        id: 10,\r\n        email: email,\r\n        displayName: name,\r\n        self: true,\r\n    };\r\n\r\n    const sendForm = async (e) => {\r\n        e.preventDefault();\r\n        await addEvent({\r\n            summary,\r\n            creator,\r\n            color,\r\n            description,\r\n            end: end,\r\n            start: new Date(start),\r\n        });\r\n        props.getEvents();\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Container>\r\n                <h1>Create New Event</h1>\r\n                <Form onSubmit={sendForm}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formSummary\">\r\n                            <Form.Label>Summary</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                placeholder=\"Evento 2\"\r\n                                onChange={(e) => setSummary(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formColor\">\r\n                            <Form.Label>Color</Form.Label>\r\n                            <Form.Control\r\n                                placeholder=\"#FF00FF\"\r\n                                onChange={(e) => setColor(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Group controlId=\"formDescription\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            placeholder=\"Viernes de la jungla\"\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formEndDate\">\r\n                        <Form.Label>End Date</Form.Label>\r\n                        <br></br>\r\n                        <input\r\n                            type=\"date\"\r\n                            min={start}\r\n                            value={start}\r\n                            onChange={(e) => setEndDate(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </Wrapper>\r\n    );\r\n};\r\nexport default CreateEvent;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Button, Carousel } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport styled from '@emotion/styled';\r\nimport Event from './Event';\r\nimport CreateEvent from './CreateEvent';\r\n\r\nconst Day = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    border: 1px solid transparent;\r\n    background: ${(props) => (props.today ? '#00D0C0' : '')};\r\n    &:hover {\r\n        border: 1px solid white;\r\n        cursor: pointer;\r\n        backdrop-filter: brightness(1.6);\r\n    }\r\n`;\r\n\r\nconst DayWrapper = styled.div`\r\n    width: 100%;\r\n    height: 70%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst EventsContainer = styled.div`\r\n    width: 100%;\r\n    height: 30%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Evento = styled.div`\r\n    width: 15%;\r\n    height: 50%;\r\n    background: ${(props) => props.color || 'red'};\r\n`;\r\n\r\nconst monthNames = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n];\r\n\r\nfunction splitDate(date) {\r\n    let splitedDate = date.split('-');\r\n    const splitedDay = splitedDate[2].slice(0, 2);\r\n    splitedDate[2] = splitedDay;\r\n    date = splitedDate.map((e) => parseInt(e));\r\n    return date;\r\n}\r\n\r\nconst DayContainer = (props) => {\r\n    const { year, month, day, TODAY } = props;\r\n    const [show, setShow] = useState(false);\r\n    const allEvents = props.allEvents;\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Day\r\n                today={`${year}-${month}-${day}` === TODAY}\r\n                onClick={handleShow}\r\n            >\r\n                <DayWrapper>\r\n                    <span>{day || ''}</span>\r\n                </DayWrapper>\r\n                {day && (\r\n                    <EventsContainer>\r\n                        {allEvents.map((event) => {\r\n                            let startDate = splitDate(event.start);\r\n                            let endDate = splitDate(event.end);\r\n                            if (\r\n                                year >= startDate[0] &&\r\n                                year <= endDate[0] &&\r\n                                month >= startDate[1] &&\r\n                                month <= endDate[1] &&\r\n                                day + month * 40 >=\r\n                                    startDate[2] + startDate[1] * 40 &&\r\n                                day + month * 40 <= endDate[2] + endDate[1] * 40\r\n                            ) {\r\n                                return (\r\n                                    <Evento\r\n                                        key={event._id}\r\n                                        color={event.color}\r\n                                    />\r\n                                );\r\n                            }\r\n                            return '';\r\n                        })}\r\n                    </EventsContainer>\r\n                )}\r\n            </Day>\r\n            {day && (\r\n                <Modal\r\n                    show={show}\r\n                    onHide={handleClose}\r\n                    size=\"lg\"\r\n                    dialogClassName=\" public-profile-modal-class\"\r\n                    className=\"special_modal\"\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>\r\n                            {day}-{monthNames[month - 1]}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Carousel>\r\n                            {allEvents.map((event) => {\r\n                                let startDate = splitDate(event.start);\r\n                                let endDate = splitDate(event.end);\r\n                                if (\r\n                                    year >= startDate[0] &&\r\n                                    year <= endDate[0] &&\r\n                                    month >= startDate[1] &&\r\n                                    month <= endDate[1] &&\r\n                                    day + month * 40 >=\r\n                                        startDate[2] + startDate[1] * 40 &&\r\n                                    day + month * 40 <=\r\n                                        endDate[2] + endDate[1] * 40\r\n                                ) {\r\n                                    return (\r\n                                        <Carousel.Item key={event._id}>\r\n                                            <Event\r\n                                                user={props.user}\r\n                                                event={event}\r\n                                                getEvents={props.getEvents}\r\n                                            />\r\n                                        </Carousel.Item>\r\n                                    );\r\n                                }\r\n                                return '';\r\n                            })}\r\n                            <Carousel.Item>\r\n                                <CreateEvent\r\n                                    year={year}\r\n                                    month={month}\r\n                                    day={day}\r\n                                    getEvents={props.getEvents}\r\n                                    user={props.user}\r\n                                />\r\n                            </Carousel.Item>\r\n                        </Carousel>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default DayContainer;\r\n","import React, { useState, useEffect } from 'react';\nimport { Alert, Spinner } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styled from '@emotion/styled';\nimport moment from 'moment';\nimport DayContainer from './DayContainer';\nimport { getEvents } from '../api/calendar';\n\nconst Container = styled.div`\n    width: 80%;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nconst LoadingContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`;\n\nconst Header = styled.div`\n    width: 100%;\n    margin-bottom: 2vh;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n`;\n\nconst ChangeMonth = styled.img`\n    width: 8%;\n    cursor: pointer;\n    transition-property: -moz-filter, -ms-filter, -o-filter, -webkit-filter,\n        filter;\n    transition-duration: 0.4s;\n    ${(props) => (props.previous ? 'transform:rotate(180deg)' : '')};\n    &:hover {\n        filter: brightness(1.7);\n    }\n`;\n\nconst Wrapper = styled.div`\n    height: 80%;\n    width: 80%;\n    background: #222331;\n    color: white;\n    display: grid;\n    grid-template-columns: auto auto auto auto auto auto auto;\n    grid-template-rows: auto auto auto auto auto auto;\n`;\n\nconst DayName = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-sizing: border-box;\n    border: 1px solid transparent;\n    background: ${(props) => (props.today === true ? '#296d98' : '')};\n    &:hover {\n        border: 1px solid white;\n        cursor: pointer;\n    }\n`;\n\nconst date = new Date();\nconst monthName = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\nlet year = date.getFullYear();\nlet month = date.getMonth() + 1;\nconst TODAY = `${year}-${month}-${date.getDate()}`;\n\nexport function changeMonth(year, month) {\n    let daysInMonth = [];\n    function getFirstDayOfMonth() {\n        let firstDay = moment(`${year}-${month}`, 'YYYY-MM')\n            .startOf('month')\n            .format('d');\n        return Number(firstDay);\n    }\n\n    function getCantDaysInMonth() {\n        return Number(moment(`${year}-${month}`, 'YYYY-MM').daysInMonth());\n    }\n\n    let firstDayOfMonth = getFirstDayOfMonth(year, month);\n    let CantDaysInMonth = getCantDaysInMonth(year, month);\n\n    for (let i = 0; i < 35; i++) {\n        if (i < firstDayOfMonth || i - firstDayOfMonth + 1 > CantDaysInMonth) {\n            daysInMonth.push('');\n            continue;\n        }\n        daysInMonth.push(i - firstDayOfMonth + 1);\n    }\n    return daysInMonth;\n}\n\nconst Calendar = (props) => {\n    const [daysInMonth, setDaysInMonth] = useState(changeMonth());\n    const [allEvents, setAllEvents] = useState([]);\n    const [showFetchError, setShowFetchError] = useState(false);\n    const [fetchingData, setFetchingData] = useState(true);\n\n    async function getData() {\n        try {\n            const data = await getEvents();\n            setAllEvents(data);\n            setShowFetchError(false);\n            setFetchingData(false);\n            console.log('GETTING DATA FROM CALENDAR');\n        } catch (err) {\n            console.log(err);\n            setShowFetchError(true);\n        }\n    }\n\n    useEffect(() => {\n        setDaysInMonth(changeMonth(year, month));\n        getData();\n    }, []);\n\n    let weekdayshort = moment.weekdaysShort();\n    return (\n        <Container>\n            {fetchingData && (\n                <Alert key=\"fetching\" variant=\"warning\">\n                    <LoadingContainer>\n                        <h2>Fetching Data</h2>\n                        <Spinner animation=\"grow\" size=\"sm\" />\n                        <Spinner animation=\"grow\" size=\"sm\" />\n                        <Spinner animation=\"grow\" size=\"sm\" />\n                    </LoadingContainer>\n                </Alert>\n            )}\n            {showFetchError && (\n                <Alert\n                    variant=\"danger\"\n                    onClose={() => setShowFetchError(false)}\n                    dismissible\n                >\n                    <Alert.Heading>API ERROR</Alert.Heading>\n                    <p>Failed to connect to api</p>\n                </Alert>\n            )}\n            <Header>\n                <ChangeMonth\n                    onClick={() => {\n                        month -= 1;\n                        if (month <= 0) {\n                            year--;\n                            month = 12;\n                        }\n                        setDaysInMonth(changeMonth(year, month));\n                    }}\n                    previous={true}\n                    src=\"https://image.flaticon.com/icons/svg/137/137517.svg\"\n                />\n                <h1>\n                    {monthName[month - 1]}-{year}\n                </h1>\n                <ChangeMonth\n                    onClick={() => {\n                        month += 1;\n                        if (month > 12) {\n                            year++;\n                            month = 1;\n                        }\n                        setDaysInMonth(changeMonth(year, month));\n                    }}\n                    src=\"https://image.flaticon.com/icons/svg/137/137517.svg\"\n                />\n            </Header>\n            <Wrapper>\n                {weekdayshort.map((day) => {\n                    return <DayName key={day}>{day}</DayName>;\n                })}\n                {daysInMonth.map((day, i) => {\n                    return (\n                        <DayContainer\n                            user={props.user}\n                            year={year}\n                            month={month}\n                            day={day}\n                            TODAY={TODAY}\n                            allEvents={allEvents}\n                            getEvents={getData}\n                            key={day || i * -1}\n                        />\n                    );\n                })}\n            </Wrapper>\n        </Container>\n    );\n};\nexport default Calendar;\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { Form, Col, Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Wrapper = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    color: white;\r\n    background: #222331;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nlet name = '';\r\nlet email = '';\r\n\r\nconst Login = (props) => {\r\n    return (\r\n        <Wrapper>\r\n            <Form\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    localStorage.setItem(\r\n                        'user',\r\n                        JSON.stringify({ name: name, email: email })\r\n                    );\r\n                    props.setUser({ name, email });\r\n                }}\r\n            >\r\n                <Form.Group as={Col} controlId=\"formName\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        onChange={(e) => {\r\n                            name = e.target.value;\r\n                        }}\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        name=\"name\"\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        onChange={(e) => {\r\n                            email = e.target.value;\r\n                        }}\r\n                        required\r\n                        type=\"email\"\r\n                        placeholder=\"Enter email\"\r\n                        name=\"email\"\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formSubmit\">\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Group>\r\n            </Form>\r\n        </Wrapper>\r\n    );\r\n};\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Calendar from './components/Calendar';\r\nimport Login from './components/Login';\r\nconst Wrapper = styled.div`\r\n    min-height: 100vh;\r\n    background: #222331;\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nfunction App() {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\r\n    if (!user) {\r\n        return <Login setUser={setUser} />;\r\n    }\r\n    return (\r\n        <Wrapper>\r\n            <Calendar user={user} />\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}